{"ast":null,"code":"import { getBikes as getBikesResource, createItem as createItemResource, removeItem as removeItemResource } from '../../Resources/bike';\nimport { removeElementById } from '../../Utils/bikeUtils';\nexport const onSelectItem = id => {\n  return {\n    type: 'SELECT_ITEM_FOR_RENT',\n    itemId: id\n  };\n};\nexport const endOfRent = id => {\n  return {\n    type: 'END_OF_RENT',\n    itemId: id\n  };\n};\nexport const onRemoveItem = id => async (dispatch, getState) => {\n  dispatch({\n    type: 'REMOVE_ITEM',\n    subtype: 'loading'\n  });\n  removeItemResource(id).then(res => {\n    const state = getState();\n    const newList = removeElementById(res.id, state.listBike.list);\n    dispatch({\n      type: 'REMOVE_ITEM',\n      subtype: 'success',\n      newList\n    });\n  }, createItemError => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      subtype: 'failed'\n    });\n  });\n};\nexport const createItem = item => async (dispatch, getState) => {\n  dispatch({\n    type: 'CREATE_ITEM',\n    subtype: 'loading'\n  });\n  createItemResource(item).then(res => {\n    const state = getState();\n    const newList = [...state.listBike.list, res];\n    dispatch({\n      type: 'CREATE_ITEM',\n      subtype: 'success',\n      newList\n    });\n  }, createItemError => {\n    dispatch({\n      type: 'CREATE_ITEM',\n      subtype: 'failed',\n      error: createItemError.message\n    });\n  });\n};\nexport const getBikes = () => async (dispatch, getState) => {\n  dispatch({\n    type: 'GET_BIKES',\n    subtype: 'loading'\n  });\n  getBikesResource().then(res => {\n    dispatch({\n      type: 'GET_BIKES',\n      subtype: 'success',\n      list: res\n    });\n  }, getBikeListError => {\n    dispatch({\n      type: 'GET_BIKES',\n      subtype: 'failed'\n    });\n  });\n};","map":{"version":3,"sources":["D:/test-list/TechStack/frontend/src/Store/actions/listBikeAction.js"],"names":["getBikes","getBikesResource","createItem","createItemResource","removeItem","removeItemResource","removeElementById","onSelectItem","id","type","itemId","endOfRent","onRemoveItem","dispatch","getState","subtype","then","res","state","newList","listBike","list","createItemError","item","error","message","getBikeListError"],"mappings":"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","sourcesContent":["import { getBikes as getBikesResource, createItem as createItemResource, removeItem as removeItemResource } from '../../Resources/bike';\r\nimport {removeElementById} from '../../Utils/bikeUtils'\r\n\r\nexport const onSelectItem = (id) => {\r\n    return {\r\n        type: 'SELECT_ITEM_FOR_RENT',\r\n        itemId: id\r\n    }\r\n};\r\n\r\nexport const endOfRent = (id) => {\r\n    return {\r\n        type: 'END_OF_RENT',\r\n        itemId: id\r\n    }\r\n};\r\n\r\nexport const onRemoveItem = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'REMOVE_ITEM',\r\n        subtype: 'loading'\r\n    })\r\n    removeItemResource(id).then(res => {\r\n        const state = getState();\r\n        const newList = removeElementById(res.id, state.listBike.list)\r\n        dispatch({\r\n            type: 'REMOVE_ITEM',\r\n            subtype: 'success',\r\n            newList\r\n        })\r\n    },\r\n    (createItemError) => {\r\n        dispatch({\r\n            type: 'REMOVE_ITEM',\r\n            subtype: 'failed',\r\n        })\r\n    })\r\n}\r\n\r\nexport const createItem = (item) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'CREATE_ITEM',\r\n        subtype: 'loading'\r\n    })\r\n    createItemResource(item).then(res => {\r\n        const state = getState();\r\n        const newList = [...state.listBike.list, res]\r\n        dispatch({\r\n            type: 'CREATE_ITEM',\r\n            subtype: 'success',\r\n            newList\r\n        })\r\n    },\r\n    (createItemError) => {\r\n        dispatch({\r\n            type: 'CREATE_ITEM',\r\n            subtype: 'failed',\r\n            error: createItemError.message\r\n        })\r\n    })\r\n}\r\n\r\nexport const getBikes = () => async (dispatch, getState) => {\r\n        dispatch({\r\n            type: 'GET_BIKES',\r\n            subtype: 'loading'\r\n        })\r\n        getBikesResource().then(res => {\r\n            dispatch({\r\n                type: 'GET_BIKES',\r\n                subtype: 'success',\r\n                list: res\r\n            })\r\n        },\r\n        (getBikeListError) => {\r\n            dispatch({\r\n                type: 'GET_BIKES',\r\n                subtype: 'failed',\r\n            })\r\n        })\r\n    };"]},"metadata":{},"sourceType":"module"}