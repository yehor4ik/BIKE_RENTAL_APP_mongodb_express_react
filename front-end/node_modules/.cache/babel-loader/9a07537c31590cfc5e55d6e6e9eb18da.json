{"ast":null,"code":"const initialState = {\n  list: [],\n  rent: [],\n  getBikesLoading: null,\n  getBikesError: null,\n  changeItemLoading: null,\n  changeItemError: null,\n  removeItemLoading: null,\n  removeItemError: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE_ITEM':\n      {\n        return { ...state,\n          list: action.subtype === 'success' ? action.newList : state.list,\n          removeItemLoading: action.subtype === 'loading',\n          getBikesLoading: action.subtype === 'loading',\n          removeItemError: action.subtype === 'failed' ? true : null\n        };\n      }\n\n    case 'GET_BIKES':\n      {\n        return { ...state,\n          list: action.subtype === 'success' ? action.list : state.list,\n          getBikesLoading: action.subtype === 'loading',\n          getBikesError: action.subtype === 'failed' ? true : null\n        };\n      }\n\n    case 'CREATE_ITEM':\n      {\n        return { ...state,\n          list: action.subtype === 'success' ? action.newList : state.list,\n          changeItemLoading: action.subtype === 'loading',\n          getBikesLoading: action.subtype === 'loading',\n          changeItemError: action.error === 'failed' ? action.error : null\n        };\n      }\n\n    case 'SELECT_ITEM_FOR_RENT':\n      {\n        return { ...state,\n          rent: [...state.rent, {\n            id: action.itemId,\n            start: Date.now()\n          }]\n        };\n      }\n\n    case 'END_OF_RENT':\n      {\n        return { ...state,\n          rent: state.rent.filter(el => el.id !== action.itemId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/test-list/TechStack/frontend/src/Store/reducers/listBikeReducer.js"],"names":["initialState","list","rent","getBikesLoading","getBikesError","changeItemLoading","changeItemError","removeItemLoading","removeItemError","reducer","state","action","type","subtype","newList","error","id","itemId","start","Date","now","filter","el"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,eAAe,EAAE,IAHA;AAIjBC,EAAAA,aAAa,EAAE,IAJE;AAKjBC,EAAAA,iBAAiB,EAAE,IALF;AAMjBC,EAAAA,eAAe,EAAE,IANA;AAOjBC,EAAAA,iBAAiB,EAAE,IAPF;AAQjBC,EAAAA,eAAe,EAAE;AARA,CAArB;;AAYA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGF,KADA;AAEHT,UAAAA,IAAI,EAAEU,MAAM,CAACE,OAAP,KAAmB,SAAnB,GAA+BF,MAAM,CAACG,OAAtC,GAAgDJ,KAAK,CAACT,IAFzD;AAGHM,UAAAA,iBAAiB,EAAEI,MAAM,CAACE,OAAP,KAAmB,SAHnC;AAIHV,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,KAAmB,SAJjC;AAKHL,UAAAA,eAAe,EAAEG,MAAM,CAACE,OAAP,KAAmB,QAAnB,GAA8B,IAA9B,GAAqC;AALnD,SAAP;AAOH;;AACD,SAAK,WAAL;AAAkB;AACd,eAAO,EACH,GAAGH,KADA;AAEHT,UAAAA,IAAI,EAAEU,MAAM,CAACE,OAAP,KAAmB,SAAnB,GAA+BF,MAAM,CAACV,IAAtC,GAA6CS,KAAK,CAACT,IAFtD;AAGHE,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,KAAmB,SAHjC;AAIHT,UAAAA,aAAa,EAAEO,MAAM,CAACE,OAAP,KAAmB,QAAnB,GAA8B,IAA9B,GAAqC;AAJjD,SAAP;AAMH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGH,KADA;AAEHT,UAAAA,IAAI,EAAEU,MAAM,CAACE,OAAP,KAAmB,SAAnB,GAA+BF,MAAM,CAACG,OAAtC,GAAgDJ,KAAK,CAACT,IAFzD;AAGHI,UAAAA,iBAAiB,EAAEM,MAAM,CAACE,OAAP,KAAmB,SAHnC;AAIHV,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,KAAmB,SAJjC;AAKHP,UAAAA,eAAe,EAAEK,MAAM,CAACI,KAAP,KAAiB,QAAjB,GAA4BJ,MAAM,CAACI,KAAnC,GAA2C;AALzD,SAAP;AAOH;;AACD,SAAK,sBAAL;AAA6B;AACzB,eAAO,EACH,GAAGL,KADA;AAEHR,UAAAA,IAAI,EAAE,CACF,GAAGQ,KAAK,CAACR,IADP,EAEF;AACIc,YAAAA,EAAE,EAAEL,MAAM,CAACM,MADf;AAEIC,YAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL;AAFX,WAFE;AAFH,SAAP;AAWH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGV,KADA;AAEHR,UAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAN,CAAWmB,MAAX,CAAmBC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUL,MAAM,CAACM,MAA3C;AAFH,SAAP;AAIH;;AACD;AACI,aAAOP,KAAP;AA/CR;AAiDH,CAlDD;;AAoDA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n    list: [],\r\n    rent: [],\r\n    getBikesLoading: null,\r\n    getBikesError: null,\r\n    changeItemLoading: null,\r\n    changeItemError: null,\r\n    removeItemLoading: null,\r\n    removeItemError: null\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'REMOVE_ITEM': {\r\n            return {\r\n                ...state,\r\n                list: action.subtype === 'success' ? action.newList : state.list,\r\n                removeItemLoading: action.subtype === 'loading',\r\n                getBikesLoading: action.subtype === 'loading',\r\n                removeItemError: action.subtype === 'failed' ? true : null,\r\n            }\r\n        }\r\n        case 'GET_BIKES': {\r\n            return {\r\n                ...state,\r\n                list: action.subtype === 'success' ? action.list : state.list,\r\n                getBikesLoading: action.subtype === 'loading',\r\n                getBikesError: action.subtype === 'failed' ? true : null,\r\n            }\r\n        }\r\n        case 'CREATE_ITEM': {\r\n            return {\r\n                ...state,\r\n                list: action.subtype === 'success' ? action.newList : state.list,\r\n                changeItemLoading: action.subtype === 'loading',\r\n                getBikesLoading: action.subtype === 'loading',\r\n                changeItemError: action.error === 'failed' ? action.error : null,\r\n            }\r\n        }\r\n        case 'SELECT_ITEM_FOR_RENT': {\r\n            return {\r\n                ...state,\r\n                rent: [\r\n                    ...state.rent,\r\n                    {\r\n                        id: action.itemId,\r\n                        start: Date.now()\r\n                    }\r\n                ],\r\n                \r\n            }\r\n        }\r\n        case 'END_OF_RENT': {\r\n            return {\r\n                ...state,\r\n                rent: state.rent.filter((el) => el.id !== action.itemId),\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}