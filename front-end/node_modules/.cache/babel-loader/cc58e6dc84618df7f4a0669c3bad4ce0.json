{"ast":null,"code":"import { mockRentBike } from '../../mockRentBike/mockRentBike';\nimport { mockList } from '../../mockList/mockList';\nimport { removeElementById, addElement, selectElement, findElementById, addItemToList, getTotal } from '../../Utils/bikeUtils';\nconst initialState = {\n  list: mockList,\n  rent: mockRentBike,\n  total: getTotal(mockRentBike),\n  quantity: mockList.length\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_ITEM':\n      {\n        const newList = addItemToList(action.item, state.list);\n        return { ...state,\n          list: newList,\n          quantity: newList.length\n        };\n      }\n\n    case 'REMOVE_ITEM':\n      {\n        const newList = removeElementById(action.itemId, state.list);\n        return { ...state,\n          list: newList,\n          quantity: newList.length\n        };\n      }\n\n    case 'SELECT_ITEM_FOR_RENT':\n      {\n        const element = findElementById(action.itemId, state.list);\n        const newListRent = addElement(element, state.rent);\n        const newList = selectElement(action.itemId, state.list);\n        return { ...state,\n          list: selectElement(action.itemId, state.list),\n          rent: newListRent,\n          total: getTotal(newListRent),\n          quantity: newList.length\n        };\n      }\n\n    case 'END_OF_RENT':\n      {\n        const element = findElementById(action.itemId, state.rent);\n        const newList = addElement(element, state.list);\n        const newListRent = selectElement(action.itemId, state.rent);\n        return { ...state,\n          list: addElement(element, state.list),\n          rent: newListRent,\n          total: getTotal(newListRent),\n          quantity: newList.length\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/test-list/TechStack/frontend/src/Store/reducers/listBikeReducer.js"],"names":["mockRentBike","mockList","removeElementById","addElement","selectElement","findElementById","addItemToList","getTotal","initialState","list","rent","total","quantity","length","reducer","state","action","type","newList","item","itemId","element","newListRent"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iCAA7B;AACA,SAAUC,QAAV,QAA0B,yBAA1B;AACA,SAASC,iBAAT,EAA4BC,UAA5B,EAAwCC,aAAxC,EAAuDC,eAAvD,EAAwEC,aAAxE,EAAuFC,QAAvF,QAAuG,uBAAvG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAER,QADW;AAEjBS,EAAAA,IAAI,EAAEV,YAFW;AAGjBW,EAAAA,KAAK,EAAEJ,QAAQ,CAACP,YAAD,CAHE;AAIjBY,EAAAA,QAAQ,EAAEX,QAAQ,CAACY;AAJF,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AAChB,cAAMC,OAAO,GAAIZ,aAAa,CAACU,MAAM,CAACG,IAAR,EAAcJ,KAAK,CAACN,IAApB,CAA9B;AACA,eAAO,EACH,GAAGM,KADA;AAEHN,UAAAA,IAAI,EAAES,OAFH;AAGHN,UAAAA,QAAQ,EAAEM,OAAO,CAACL;AAHf,SAAP;AAKH;;AACD,SAAK,aAAL;AAAmB;AACf,cAAMK,OAAO,GAAGhB,iBAAiB,CAACc,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACN,IAAtB,CAAjC;AACA,eAAO,EACH,GAAGM,KADA;AAEHN,UAAAA,IAAI,EAAES,OAFH;AAGHN,UAAAA,QAAQ,EAAEM,OAAO,CAACL;AAHf,SAAP;AAKH;;AACD,SAAK,sBAAL;AAA6B;AACzB,cAAMQ,OAAO,GAAGhB,eAAe,CAACW,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACN,IAAtB,CAA/B;AACA,cAAMa,WAAW,GAAGnB,UAAU,CAACkB,OAAD,EAAUN,KAAK,CAACL,IAAhB,CAA9B;AACA,cAAMQ,OAAO,GAAGd,aAAa,CAACY,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACN,IAAtB,CAA7B;AACA,eAAO,EACH,GAAGM,KADA;AAEHN,UAAAA,IAAI,EAAEL,aAAa,CAACY,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACN,IAAtB,CAFhB;AAGHC,UAAAA,IAAI,EAAEY,WAHH;AAIHX,UAAAA,KAAK,EAAEJ,QAAQ,CAACe,WAAD,CAJZ;AAKHV,UAAAA,QAAQ,EAAEM,OAAO,CAACL;AALf,SAAP;AAOH;;AACD,SAAK,aAAL;AAAoB;AAChB,cAAMQ,OAAO,GAAGhB,eAAe,CAACW,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACL,IAAtB,CAA/B;AACA,cAAMQ,OAAO,GAAGf,UAAU,CAACkB,OAAD,EAAUN,KAAK,CAACN,IAAhB,CAA1B;AACA,cAAMa,WAAW,GAAGlB,aAAa,CAACY,MAAM,CAACI,MAAR,EAAgBL,KAAK,CAACL,IAAtB,CAAjC;AACA,eAAO,EACH,GAAGK,KADA;AAEHN,UAAAA,IAAI,EAAEN,UAAU,CAACkB,OAAD,EAAUN,KAAK,CAACN,IAAhB,CAFb;AAGHC,UAAAA,IAAI,EAAEY,WAHH;AAIHX,UAAAA,KAAK,EAAEJ,QAAQ,CAACe,WAAD,CAJZ;AAKHV,UAAAA,QAAQ,EAAEM,OAAO,CAACL;AALf,SAAP;AAOH;;AACD;AACI,aAAOE,KAAP;AA1CR;AA4CH,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["import { mockRentBike } from '../../mockRentBike/mockRentBike'\r\nimport {  mockList } from '../../mockList/mockList'\r\nimport { removeElementById, addElement, selectElement, findElementById, addItemToList, getTotal } from '../../Utils/bikeUtils'\r\n\r\nconst initialState = {\r\n    list: mockList,\r\n    rent: mockRentBike,\r\n    total: getTotal(mockRentBike),\r\n    quantity: mockList.length,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_ITEM': {\r\n            const newList =  addItemToList(action.item, state.list)\r\n            return {\r\n                ...state,\r\n                list: newList,\r\n                quantity: newList.length,\r\n            }\r\n        }\r\n        case 'REMOVE_ITEM':{\r\n            const newList = removeElementById(action.itemId, state.list)\r\n            return {\r\n                ...state,\r\n                list: newList,\r\n                quantity: newList.length,\r\n            }\r\n        }\r\n        case 'SELECT_ITEM_FOR_RENT': {\r\n            const element = findElementById(action.itemId, state.list)\r\n            const newListRent = addElement(element, state.rent)\r\n            const newList = selectElement(action.itemId, state.list)\r\n            return {\r\n                ...state,\r\n                list: selectElement(action.itemId, state.list),\r\n                rent: newListRent,\r\n                total: getTotal(newListRent),\r\n                quantity: newList.length,\r\n            }\r\n        }\r\n        case 'END_OF_RENT': {\r\n            const element = findElementById(action.itemId, state.rent)\r\n            const newList = addElement(element, state.list)\r\n            const newListRent = selectElement(action.itemId, state.rent)\r\n            return {\r\n                ...state,\r\n                list: addElement(element, state.list),\r\n                rent: newListRent,\r\n                total: getTotal(newListRent),\r\n                quantity: newList.length,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}